(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{165:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("A function has a side effect if it does anything other than return a value. Examples:")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("See "),s("a",{attrs:{href:"https://github.com/calebharris/fp_book_club_ts/tree/master/fpbookclub/intro",target:"_blank",rel:"noopener noreferrer"}},[t._v("the code repository"),s("OutboundLink")],1),t._v(" for expanded,\nrunnable versions of these examples.")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._m(10)])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h1",{attrs:{id:"chapter-1-what-is-functional-programming"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chapter-1-what-is-functional-programming","aria-hidden":"true"}},[this._v("#")]),this._v(" Chapter 1. What is functional programming?")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("We construct our programs using only "),a("em",[this._v("pure functions")]),this._v(" - functions that have no "),a("em",[this._v("side effects")]),this._v(".")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[t._v("Modifying a variable")]),t._v(" "),s("li",[t._v("Modifying a data structure in place")]),t._v(" "),s("li",[t._v("Setting a field on an object")]),t._v(" "),s("li",[t._v("Throwing an exception or halting with an error")]),t._v(" "),s("li",[t._v("Printing to the console or reading user input")]),t._v(" "),s("li",[t._v("Reading from or writing to a file")]),t._v(" "),s("li",[t._v("Drawing on the screen")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"benefits-of-fp-a-simple-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#benefits-of-fp-a-simple-example","aria-hidden":"true"}},[this._v("#")]),this._v(" Benefits of FP: a simple example")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("We'll walk through refactoring a simple program to remove side effects and demonstrate some TypeScript syntax. We'll\nalso touch on two import concepts in functional programming: "),a("em",[this._v("referential transparency")]),this._v(" and the "),a("em",[this._v("substitution model")]),this._v(".")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"a-program-with-side-effects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-program-with-side-effects","aria-hidden":"true"}},[this._v("#")]),this._v(" A program with side effects")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Cafe")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                               "),s("span",{attrs:{class:"token comment"}},[t._v("//class keyword introduces a class, just")]),t._v("\n                                           "),s("span",{attrs:{class:"token comment"}},[t._v("//  like every other OO language")]),t._v("\n\n  "),s("span",{attrs:{class:"token function"}},[t._v("buyCoffee")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cc"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CreditCard"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Coffee "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("      "),s("span",{attrs:{class:"token comment"}},[t._v("//method of a class introduced by a name")]),t._v("\n                                           "),s("span",{attrs:{class:"token comment"}},[t._v("//  followed by ()")]),t._v("\n                                           "),s("span",{attrs:{class:"token comment"}},[t._v("//`cc: CreditCard` defines parameter")]),t._v("\n                                           "),s("span",{attrs:{class:"token comment"}},[t._v("//  named `cc` of type `CreditCard`")]),t._v("\n                                           "),s("span",{attrs:{class:"token comment"}},[t._v("//`: Coffee` declares the return type of")]),t._v("\n                                           "),s("span",{attrs:{class:"token comment"}},[t._v("//  the method. compiler will error if the")]),t._v("\n                                           "),s("span",{attrs:{class:"token comment"}},[t._v("//  method can possibly not return a")]),t._v("\n                                           "),s("span",{attrs:{class:"token comment"}},[t._v("//  `Coffee` object")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cup "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Coffee")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cc"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("charge")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cup"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                  "),s("span",{attrs:{class:"token comment"}},[t._v("//side effect: actually charges the card")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cup"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("p",[t._v("The line "),s("code",[t._v("cc.charge(cup.price)")]),t._v(" is an example of a side effect. Charging a credit card involves some interaction\nwith the outside world. But the function's return value is just a "),s("code",[t._v("Coffee")]),t._v(", meaning this interactions are not easily\nobservable, making our function difficult to test. We can improve modularity and testability by introducing a\n"),s("code",[t._v("Payments")]),t._v(" object that encapsulates the payment processing logic and removing it from "),s("code",[t._v("CreditCard")]),t._v(".")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"adding-a-payments-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adding-a-payments-object","aria-hidden":"true"}},[this._v("#")]),this._v(" Adding a Payments object")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Cafe")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("buyCoffee")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cc"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CreditCard"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Payments"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Coffee "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cup "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Coffee")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("charge")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cc"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cup"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cup"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("The side effect still happens. But we have regained some testability because we can pass in a mock "),a("code",[this._v("Payments")]),this._v(" object.\nHowever, any mock will be awkward to use, because it will have to do things like maintain internal state that we can\ninspect after the call to "),a("code",[this._v("charge()")]),this._v(". This all feels like overkill if we just want to test that buyCoffee creates a\ncharge equal to the price of a cup of coffee.")])}],!1,null,null,null);a.default=n.exports}}]);